$date
	Mon Mar 18 23:21:30 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module brainless_top $end
$scope module brainless $end
$var wire 1 ! acc_to_db $end
$var wire 4 " accum [3:0] $end
$var wire 4 # addr_bus [3:0] $end
$var wire 4 $ alu_out [3:0] $end
$var wire 1 % arith $end
$var wire 1 & clk $end
$var wire 4 ' data_bus [3:0] $end
$var wire 4 ( data_in [3:0] $end
$var wire 1 ) invert $end
$var wire 1 * load_acc $end
$var wire 1 + pass $end
$var wire 1 , read $end
$var wire 1 - reset $end
$var wire 1 . write $end
$var wire 4 / s1 [3:0] $end
$var wire 4 0 s0 [3:0] $end
$var wire 4 1 data_bus_temp [3:0] $end
$var wire 4 2 alu_out_temp [3:0] $end
$var wire 4 3 accum_temp [3:0] $end
$scope module alu_i0 $end
$var wire 1 % arith $end
$var wire 1 4 cin $end
$var wire 1 ) invert $end
$var wire 1 + pass $end
$var wire 4 5 y [3:0] $end
$var wire 4 6 s0 [3:0] $end
$var wire 1 7 overfl $end
$var wire 1 8 cout $end
$var wire 4 9 b [3:0] $end
$var wire 4 : a [3:0] $end
$scope module and_add_i1 $end
$var wire 1 % add $end
$var wire 1 4 cin $end
$var wire 1 + pass $end
$var wire 4 ; y [3:0] $end
$var wire 4 < s2 [3:0] $end
$var wire 4 = s1 [3:0] $end
$var wire 4 > s0 [3:0] $end
$var wire 1 7 overfl $end
$var wire 1 8 cout $end
$var wire 4 ? b [3:0] $end
$var wire 4 @ a [3:0] $end
$scope module four_bit_adder_i0 $end
$var wire 1 4 cin $end
$var wire 1 8 cout $end
$var wire 1 7 overfl $end
$var wire 4 A y [3:0] $end
$var wire 1 B s9 $end
$var wire 1 C s8 $end
$var wire 1 D s7 $end
$var wire 1 E s6 $end
$var wire 1 F s5 $end
$var wire 1 G s4 $end
$var wire 1 H s3 $end
$var wire 1 I s2 $end
$var wire 1 J s14 $end
$var wire 1 K s13 $end
$var wire 1 L s12 $end
$var wire 1 M s11 $end
$var wire 1 N s10 $end
$var wire 1 O s1 $end
$var wire 1 P s0 $end
$var wire 1 Q cout_temp $end
$var wire 4 R b [3:0] $end
$var wire 4 S a [3:0] $end
$scope module full_adder_i0 $end
$var wire 1 H a $end
$var wire 1 D b $end
$var wire 1 4 cin $end
$var wire 1 J cout $end
$var wire 1 M sum $end
$upscope $end
$scope module full_adder_i1 $end
$var wire 1 I a $end
$var wire 1 E b $end
$var wire 1 J cin $end
$var wire 1 K cout $end
$var wire 1 N sum $end
$upscope $end
$scope module full_adder_i2 $end
$var wire 1 O a $end
$var wire 1 F b $end
$var wire 1 K cin $end
$var wire 1 L cout $end
$var wire 1 B sum $end
$upscope $end
$scope module full_adder_i3 $end
$var wire 1 P a $end
$var wire 1 G b $end
$var wire 1 L cin $end
$var wire 1 Q cout $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope module four_bit_mux_i1 $end
$var wire 4 T a [3:0] $end
$var wire 4 U b [3:0] $end
$var wire 1 % sel $end
$var wire 4 V y [3:0] $end
$var wire 1 W s9 $end
$var wire 1 X s8 $end
$var wire 1 Y s7 $end
$var wire 1 Z s6 $end
$var wire 1 [ s5 $end
$var wire 1 \ s4 $end
$var wire 1 ] s3 $end
$var wire 1 ^ s2 $end
$var wire 1 _ s11 $end
$var wire 1 ` s10 $end
$var wire 1 a s1 $end
$var wire 1 b s0 $end
$scope module two_bit_mux_i0 $end
$var wire 1 \ a $end
$var wire 1 X b $end
$var wire 1 % s $end
$var wire 1 b y $end
$upscope $end
$scope module two_bit_mux_i1 $end
$var wire 1 Z a $end
$var wire 1 ` b $end
$var wire 1 % s $end
$var wire 1 ^ y $end
$upscope $end
$scope module two_bit_mux_i2 $end
$var wire 1 [ a $end
$var wire 1 W b $end
$var wire 1 % s $end
$var wire 1 a y $end
$upscope $end
$scope module two_bit_mux_i3 $end
$var wire 1 Y a $end
$var wire 1 _ b $end
$var wire 1 % s $end
$var wire 1 ] y $end
$upscope $end
$upscope $end
$scope module four_bit_mux_i2 $end
$var wire 4 c a [3:0] $end
$var wire 1 + sel $end
$var wire 4 d y [3:0] $end
$var wire 1 e s9 $end
$var wire 1 f s8 $end
$var wire 1 g s7 $end
$var wire 1 h s6 $end
$var wire 1 i s5 $end
$var wire 1 j s4 $end
$var wire 1 k s3 $end
$var wire 1 l s2 $end
$var wire 1 m s11 $end
$var wire 1 n s10 $end
$var wire 1 o s1 $end
$var wire 1 p s0 $end
$var wire 4 q b [3:0] $end
$scope module two_bit_mux_i0 $end
$var wire 1 j a $end
$var wire 1 f b $end
$var wire 1 + s $end
$var wire 1 p y $end
$upscope $end
$scope module two_bit_mux_i1 $end
$var wire 1 h a $end
$var wire 1 n b $end
$var wire 1 + s $end
$var wire 1 l y $end
$upscope $end
$scope module two_bit_mux_i2 $end
$var wire 1 i a $end
$var wire 1 e b $end
$var wire 1 + s $end
$var wire 1 o y $end
$upscope $end
$scope module two_bit_mux_i3 $end
$var wire 1 g a $end
$var wire 1 m b $end
$var wire 1 + s $end
$var wire 1 k y $end
$upscope $end
$upscope $end
$upscope $end
$scope module not_neg_i0 $end
$var wire 1 ) invert $end
$var wire 1 % neg $end
$var wire 1 r s1 $end
$var wire 4 s y [3:0] $end
$var wire 4 t s0 [3:0] $end
$var wire 1 u cry $end
$var wire 4 v a [3:0] $end
$scope module incrementer_i0 $end
$var wire 4 w a [3:0] $end
$var wire 1 r inc $end
$var wire 4 x y [3:0] $end
$var wire 1 y s9 $end
$var wire 1 z s8 $end
$var wire 1 { s7 $end
$var wire 1 | s6 $end
$var wire 1 } s5 $end
$var wire 1 ~ s4 $end
$var wire 1 !" s3 $end
$var wire 1 "" s2 $end
$var wire 1 #" s10 $end
$var wire 1 $" s1 $end
$var wire 1 %" s0 $end
$var wire 1 u cry $end
$scope module half_adder_i0 $end
$var wire 1 y a $end
$var wire 1 r b $end
$var wire 1 } cry $end
$var wire 1 #" sum $end
$upscope $end
$scope module half_adder_i1 $end
$var wire 1 ~ a $end
$var wire 1 } b $end
$var wire 1 $" cry $end
$var wire 1 | sum $end
$upscope $end
$scope module half_adder_i2 $end
$var wire 1 %" a $end
$var wire 1 $" b $end
$var wire 1 !" cry $end
$var wire 1 "" sum $end
$upscope $end
$scope module half_adder_i3 $end
$var wire 1 { a $end
$var wire 1 !" b $end
$var wire 1 u cry $end
$var wire 1 z sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module four_bit_mux_i2 $end
$var wire 1 ! sel $end
$var wire 4 &" y [3:0] $end
$var wire 1 '" s9 $end
$var wire 1 (" s8 $end
$var wire 1 )" s7 $end
$var wire 1 *" s6 $end
$var wire 1 +" s5 $end
$var wire 1 ," s4 $end
$var wire 1 -" s3 $end
$var wire 1 ." s2 $end
$var wire 1 /" s11 $end
$var wire 1 0" s10 $end
$var wire 1 1" s1 $end
$var wire 1 2" s0 $end
$var wire 4 3" b [3:0] $end
$var wire 4 4" a [3:0] $end
$scope module two_bit_mux_i0 $end
$var wire 1 ," a $end
$var wire 1 (" b $end
$var wire 1 ! s $end
$var wire 1 2" y $end
$upscope $end
$scope module two_bit_mux_i1 $end
$var wire 1 *" a $end
$var wire 1 0" b $end
$var wire 1 ! s $end
$var wire 1 ." y $end
$upscope $end
$scope module two_bit_mux_i2 $end
$var wire 1 +" a $end
$var wire 1 '" b $end
$var wire 1 ! s $end
$var wire 1 1" y $end
$upscope $end
$scope module two_bit_mux_i3 $end
$var wire 1 )" a $end
$var wire 1 /" b $end
$var wire 1 ! s $end
$var wire 1 -" y $end
$upscope $end
$upscope $end
$scope module four_bit_mux_i4 $end
$var wire 4 5" a [3:0] $end
$var wire 1 , sel $end
$var wire 4 6" y [3:0] $end
$var wire 1 7" s9 $end
$var wire 1 8" s8 $end
$var wire 1 9" s7 $end
$var wire 1 :" s6 $end
$var wire 1 ;" s5 $end
$var wire 1 <" s4 $end
$var wire 1 =" s3 $end
$var wire 1 >" s2 $end
$var wire 1 ?" s11 $end
$var wire 1 @" s10 $end
$var wire 1 A" s1 $end
$var wire 1 B" s0 $end
$var wire 4 C" b [3:0] $end
$scope module two_bit_mux_i0 $end
$var wire 1 <" a $end
$var wire 1 8" b $end
$var wire 1 , s $end
$var wire 1 B" y $end
$upscope $end
$scope module two_bit_mux_i1 $end
$var wire 1 :" a $end
$var wire 1 @" b $end
$var wire 1 , s $end
$var wire 1 >" y $end
$upscope $end
$scope module two_bit_mux_i2 $end
$var wire 1 ;" a $end
$var wire 1 7" b $end
$var wire 1 , s $end
$var wire 1 A" y $end
$upscope $end
$scope module two_bit_mux_i3 $end
$var wire 1 9" a $end
$var wire 1 ?" b $end
$var wire 1 , s $end
$var wire 1 =" y $end
$upscope $end
$upscope $end
$scope module four_bit_reg_i1 $end
$var wire 1 & clk $end
$var wire 4 D" d [3:0] $end
$var wire 1 * enable $end
$var wire 4 E" q [3:0] $end
$var wire 1 - reset $end
$var wire 4 F" s8 [3:0] $end
$var wire 1 G" s7 $end
$var wire 1 H" s6 $end
$var wire 1 I" s5 $end
$var wire 1 J" s4 $end
$var wire 1 K" s3 $end
$var wire 1 L" s2 $end
$var wire 1 M" s1 $end
$var wire 1 N" s0 $end
$var wire 4 O" q_temp [3:0] $end
$scope module DIG_D_FF_AS_1bit_i0 $end
$var wire 1 & C $end
$var wire 1 - Clr $end
$var wire 1 N" D $end
$var wire 1 M" Q $end
$var wire 1 P" Set $end
$var wire 1 Q" \~Q $end
$var reg 1 R" state $end
$upscope $end
$scope module DIG_D_FF_AS_1bit_i1 $end
$var wire 1 & C $end
$var wire 1 - Clr $end
$var wire 1 L" D $end
$var wire 1 K" Q $end
$var wire 1 S" Set $end
$var wire 1 T" \~Q $end
$var reg 1 U" state $end
$upscope $end
$scope module DIG_D_FF_AS_1bit_i2 $end
$var wire 1 & C $end
$var wire 1 - Clr $end
$var wire 1 J" D $end
$var wire 1 I" Q $end
$var wire 1 V" Set $end
$var wire 1 W" \~Q $end
$var reg 1 X" state $end
$upscope $end
$scope module DIG_D_FF_AS_1bit_i3 $end
$var wire 1 & C $end
$var wire 1 - Clr $end
$var wire 1 H" D $end
$var wire 1 G" Q $end
$var wire 1 Y" Set $end
$var wire 1 Z" \~Q $end
$var reg 1 [" state $end
$upscope $end
$scope module four_bit_mux_i4 $end
$var wire 4 \" a [3:0] $end
$var wire 4 ]" b [3:0] $end
$var wire 1 * sel $end
$var wire 4 ^" y [3:0] $end
$var wire 1 _" s9 $end
$var wire 1 `" s8 $end
$var wire 1 a" s7 $end
$var wire 1 b" s6 $end
$var wire 1 c" s5 $end
$var wire 1 d" s4 $end
$var wire 1 e" s3 $end
$var wire 1 f" s2 $end
$var wire 1 g" s11 $end
$var wire 1 h" s10 $end
$var wire 1 i" s1 $end
$var wire 1 j" s0 $end
$scope module two_bit_mux_i0 $end
$var wire 1 d" a $end
$var wire 1 `" b $end
$var wire 1 * s $end
$var wire 1 j" y $end
$upscope $end
$scope module two_bit_mux_i1 $end
$var wire 1 b" a $end
$var wire 1 h" b $end
$var wire 1 * s $end
$var wire 1 f" y $end
$upscope $end
$scope module two_bit_mux_i2 $end
$var wire 1 c" a $end
$var wire 1 _" b $end
$var wire 1 * s $end
$var wire 1 i" y $end
$upscope $end
$scope module two_bit_mux_i3 $end
$var wire 1 a" a $end
$var wire 1 g" b $end
$var wire 1 * s $end
$var wire 1 e" y $end
$upscope $end
$upscope $end
$upscope $end
$scope module program_ram_i3 $end
$var wire 4 k" addr [3:0] $end
$var wire 1 & clk $end
$var wire 4 l" data_in [3:0] $end
$var wire 1 . write $end
$var wire 4 m" data_out [3:0] $end
$scope module DIG_RAMDualPort_i0 $end
$var wire 4 n" A [3:0] $end
$var wire 1 & C $end
$var wire 4 o" D [3:0] $end
$var wire 4 p" Din [3:0] $end
$var wire 1 q" ld $end
$var wire 1 . str $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1q"
b10 p"
b11 o"
b0 n"
b11 m"
b10 l"
b0 k"
0j"
0i"
1h"
0g"
1f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
b10 ^"
b10 ]"
b0 \"
0["
1Z"
0Y"
0X"
1W"
0V"
0U"
1T"
0S"
0R"
1Q"
0P"
b0 O"
0N"
0M"
0L"
0K"
1J"
0I"
0H"
0G"
b10 F"
b0 E"
b10 D"
b11 C"
0B"
0A"
1@"
1?"
1>"
0="
0<"
0;"
1:"
09"
08"
07"
b10 6"
b10 5"
b10 4"
b0 3"
02"
01"
00"
0/"
1."
0-"
0,"
0+"
1*"
0)"
0("
0'"
b10 &"
0%"
0$"
0#"
0""
0!"
1~
0}
1|
0{
0z
0y
b10 x
b10 w
b10 v
0u
b10 t
b10 s
0r
b10 q
0p
0o
1n
0m
1l
0k
0j
0i
1h
0g
0f
0e
b10 d
b10 c
0b
0a
1`
0_
1^
0]
0\
0[
0Z
0Y
0X
0W
b10 V
b10 U
b0 T
b10 S
b0 R
0Q
0P
0O
1N
0M
0L
0K
0J
1I
0H
0G
0F
0E
0D
0C
0B
b10 A
b10 @
b0 ?
b0 >
b10 =
b10 <
b10 ;
b10 :
b0 9
08
07
b10 6
b10 5
04
b0 3
b10 2
b10 1
b10 0
b11 /
0.
0-
0,
0+
1*
0)
b10 (
b10 '
0&
1%
b10 $
b0 #
b0 "
0!
$end
#5
1L"
0J"
1i"
b100 F"
b100 ^"
0f"
1_"
0h"
1o
b100 $
b100 2
b100 5
b100 ;
b100 d
b100 D"
b100 ]"
0l
1i
0h
1a
b100 <
b100 V
b100 c
0^
1W
0`
1B
b100 =
b100 A
b100 U
0N
1K
1Z
b10 >
b10 T
0W"
1b"
10"
1E
b10 "
b10 3
b10 9
b10 ?
b10 R
b10 3"
b10 E"
b10 O"
b10 \"
1I"
1X"
1&
#10
0&
#15
0N"
0j"
1J"
0`"
b110 F"
b110 ^"
1f"
0p
1h"
0j
b110 $
b110 2
b110 5
b110 ;
b110 d
b110 D"
b110 ]"
1l
0b
1h
0X
b110 <
b110 V
b110 c
1^
0C
07
0L
1`
b110 =
b110 A
b110 U
1N
0K
0Z
b0 >
b0 T
0T"
1c"
1'"
1F
1W"
0b"
00"
0E
1K"
1U"
b100 "
b100 3
b100 9
b100 ?
b100 R
b100 3"
b100 E"
b100 O"
b100 \"
0I"
0X"
1&
#20
0W
0B
1T"
0c"
0'"
0F
b0 "
b0 3
b0 9
b0 ?
b0 R
b0 3"
b0 E"
b0 O"
b0 \"
0K"
0U"
0`
b0 =
b0 A
b0 U
0N
0n
0I
b0 6
b0 @
b0 S
b0 q
b0 s
b0 x
0|
0~
b0 t
b0 w
0h"
0_"
b0 '
b0 1
b0 :
b0 v
b0 &"
b0 l"
b0 p"
0."
0l
b0 $
b0 2
b0 5
b0 ;
b0 d
b0 D"
b0 ]"
0o
0*"
0J"
0L"
0h
0i
b0 0
b0 4"
b0 6"
0>"
0f"
b0 F"
b0 ^"
0i"
0^
b0 <
b0 V
b0 c
0a
0:"
1-
0*
0%
b0 (
b0 5"
0&
#25
1&
#30
1L"
1J"
1H"
1i"
1f"
b111 F"
b111 ^"
1e"
1_"
1h"
1g"
1o
1l
b111 $
b111 2
b111 5
b111 ;
b111 d
b111 D"
b111 ]"
1k
1i
1h
1g
1a
1^
b111 <
b111 V
b111 c
1]
1W
1`
1_
1B
1N
b111 =
b111 A
b111 U
1M
1e
1O
1n
1I
1m
1H
1""
1|
b111 6
b111 @
b111 S
b111 q
b111 s
b111 x
1#"
1%"
1~
1y
b111 t
b111 w
11"
1."
b111 '
b111 1
b111 :
b111 v
b111 &"
b111 l"
b111 p"
1-"
1+"
1*"
1)"
1A"
1>"
b111 0
b111 4"
b111 6"
1="
1;"
1:"
19"
0-
1*
1%
b111 (
b111 5"
0&
#35
1N"
1j"
0H"
b1110 F"
b1110 ^"
0e"
1`"
1p
0g"
b1110 $
b1110 2
b1110 5
b1110 ;
b1110 d
b1110 D"
b1110 ]"
0k
1j
1b
0g
b1110 <
b1110 V
b1110 c
0]
1X
1C
17
0_
1L
1[
1K
1Z
b1110 =
b1110 A
b1110 U
0M
1J
1Y
b111 >
b111 T
0T"
1c"
1'"
1F
0W"
1b"
10"
1E
0Z"
1a"
1/"
1D
1K"
1U"
1I"
1X"
b111 "
b111 3
b111 9
b111 ?
b111 R
b111 3"
b111 E"
b111 O"
b111 \"
1G"
1["
1&
#40
0J"
1L"
0N"
0f"
1i"
b100 F"
b100 ^"
0j"
0h"
1_"
0`"
0l
1o
b100 $
b100 2
b100 5
b100 ;
b100 d
b100 D"
b100 ]"
0p
0h
1i
0j
0^
1a
b100 <
b100 V
b100 c
0b
07
0`
1W
0X
18
1Q
0N
0Z
1B
1[
b100 =
b100 A
b100 U
0C
b11 '
b11 1
b11 :
b11 v
b11 &"
b11 l"
b11 p"
01"
b101 >
b101 T
0n
0I
1e
1O
1f
1P
0+"
0|
1""
b1101 6
b1101 @
b1101 S
b1101 q
b1101 s
b1101 x
1z
b11 0
b11 4"
b11 6"
0A"
0y
0~
1%"
1{
1r
b1100 t
b1100 w
0;"
1)
b11 (
b11 5"
0&
#45
0L"
0i"
1H"
0_"
b1 F"
b1 ^"
1e"
0o
1g"
0i
b1 $
b1 2
b1 5
b1 ;
b1 d
b1 D"
b1 ]"
1k
0a
1g
0W
b1 <
b1 V
b1 c
1]
0B
0K
1_
b1 =
b1 A
b1 U
1M
0J
0Y
b100 >
b100 T
1W"
0b"
00"
0E
1Z"
0a"
0/"
0D
0I"
0X"
b100 "
b100 3
b100 9
b100 ?
b100 R
b100 3"
b100 E"
b100 O"
b100 \"
0G"
0["
1&
#50
xK
xJ
xY
1T"
0c"
0'"
0F
0Z"
1a"
1/"
1D
0K"
0U"
b1 "
b1 3
b1 9
b1 ?
b1 R
b1 3"
b1 E"
b1 O"
b1 \"
1G"
1["
xJ"
xh
xj
xf"
x^
xb
xh"
x`
xW
x7
xX
x8
xQ
xN"
x_
xl
xN
xB
xL
0[
xC
x2"
xj"
bx =
bx A
bx U
xM
xu
b0x >
b0x T
xL"
xg"
xi
xn
xI
x!"
xe
xO
xf
xP
x,"
x*"
x+"
x)"
x."
x-"
xi"
xH"
x`"
x_"
xk
xa
xg
xm
xH
x|
x$"
x""
xz
xB"
x>"
xA"
bx 0
bx 4"
bx 6"
x="
bx '
bx 1
bx :
bx v
bx &"
bx l"
bx p"
x1"
bx F"
bx ^"
xe"
xp
bx $
bx 2
bx 5
bx ;
bx d
bx D"
bx ]"
xo
bx <
bx V
bx c
x]
bx 6
bx @
bx S
bx q
bx s
bx x
x#"
x}
xy
x~
x%"
x{
xr
bx t
bx w
x?"
x@"
x7"
x8"
x<"
x;"
x:"
x9"
x,
x.
x-
x!
x*
x+
x%
x)
bx /
bx C"
bx m"
bx o"
bx #
bx k"
bx n"
bx (
bx 5"
0&
#55
x\
x[
xZ
bx >
bx T
xQ"
xd"
x("
xG
xT"
xc"
x'"
xF
xW"
xb"
x0"
xE
xZ"
xa"
x/"
xD
xM"
xR"
xK"
xU"
xI"
xX"
bx "
bx 3
bx 9
bx ?
bx R
bx 3"
bx E"
bx O"
bx \"
xG"
x["
1&
#60
0&
#65
1&
#70
0&
#75
1&
#80
0\
0[
0J
0Y
b0x0 >
b0x0 T
0f
0P
1n
1I
0e
0O
0m
0H
0z
1|
0""
b10 6
b10 @
b10 S
b10 q
b10 s
b10 x
0#"
0{
1~
0%"
0y
b10 t
b10 w
02"
1."
01"
b10 '
b10 1
b10 :
b10 v
b10 &"
b10 l"
b10 p"
0-"
0u
0!"
0,"
1*"
0+"
0)"
0$"
0B"
1>"
0A"
b10 0
b10 4"
b10 6"
0="
0}
0r
1?"
1@"
07"
08"
0<"
0;"
1:"
09"
0,
0.
0-
0!
1*
0+
1%
0)
b11 /
b11 C"
b11 m"
b11 o"
b0 #
b0 k"
b0 n"
b10 (
b10 5"
0&
